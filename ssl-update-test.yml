---
- hosts: all
  gather_facts: no
  remote_user: ubuntu
  become: yes
  become_user: root
  
  vars:
    nginx_dir: "/home/ubuntu"
    ssl_file_dir: "{{ nginx_dir }}/."
    sites_conf_dir: "{{ nginx_dir }}/."
  
  tasks:
  - name: Save SSL key file
    copy:
      dest: "{{ ssl_file_dir }}/{{ domain_name }}.key"
      content: "{{ ssl_key_content }}"
    
  - name: Save SSL cert. file
    copy:
      dest: "{{ ssl_file_dir }}/{{ domain_name }}.pem"
      content: "{{ ssl_cert_content }}"
    
  - name: Create nginx SSL configuration file
    copy:
      dest: "{{ sites_conf_dir }}/{{ domain_name }}"
      content: |
        server {
          listen 80;
          server_name {{ domain_name }};

          location / {
            return 301 https://{{ domain_name }}\$request_uri;
          }
        }

        server {
          listen 443 ssl;
          server_name {{ domain_name }};

          ssl_certificate {{ ssl_file_dir }}/{{ domain_name }}.pem;
          ssl_certificate_key {{ ssl_file_dir }}/{{ domain_name }}.key;


          ssl_session_timeout 5m;
          ssl_protocols SSLv2 SSLv3 TLSv1.2;
          ssl_ciphers HIGH:!aNULL:!MD5;
          ssl_prefer_server_ciphers on;

          client_max_body_size 100M;
          sendfile on;
          send_timeout 300s;

          location / {
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header X-Real-IP \$proxy_protocol_addr;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
            proxy_set_header Host \$host;
            proxy_http_version 1.1;
            proxy_pass http://domain_proxy_nodes;
          }
        }

  - name: Reload nginx
    shell: nginx reload
